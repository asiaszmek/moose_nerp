1. NeuroML
   a. put reading nml file into cell_proto.neuronclasses or cell_proto.creat_neuron?
   b. what to do about spine compensation for nml - should spineYN=0, and explicit spine density = 0
   c. synapses - these can be specified in nml, but they wouldn't be on spines
   d. when all is said and done, simplify specification to run nml model exactly, and then add spines and calcium
   e. Calcium has to be improved. - Define named dict 1st for pumps and buffers, create parameters for calcium diffusion, etc, re-order pump density spec.
   
4. Fix: Note that only adding plasticity to synapse[0] (plasticity.py)
   Fix: NETWORK: net_output and net_graph
   	plot calcium, synchan current and/or conductance of some compartments
	e.g. select small subset of synchans for plotting synchan current and calcium if doing network simulations
	e.g. plot synchan current of all (many?) synchans that have inputs if not simulating network (possibly add NMDA also in tables.syn_plastabs)
	    fix syn_graph to plot multiple types of synchans, each in separate graph panel, and fix table name to facilitate extraction of syn type
   Fix: only plotting one synapse connected to each timetable -sh.synapse[0] in add_one_table in tables.py.

5. Code Refinements
   C. refine count_presyn to account for a. non-dist dependence, and multiple connections per neuron with location dependence
                                         b. 3D arrays of elements
   D. test/debug case where neurons to have both intrinsic (pre-cell) and extern (timetable) inputs of same syntype
   E. Wrap around network into torus to fix inputs at edges of network
   F: Think about how to connect two different networks, e.g. striatum and GP

6.Types of spike train correlations
  1. number of synaptic terminals between single axon and single neuron
       parameter specifying range or mean number.  Randomly select how many and repeat calls to
           synpath,syncomps=select_entry(syncomps)
           synconn(synpath,dist,presyn_tt,netparams.mindelay)
  2. with and between neuron correlation due to correlation of the cortical region projecting to striatum
      account for both of these (same source) with correlated spike trains
  3.  between neuron correlations because a single axon can contact multiple neurons
       implement using parameter syn_per_tt - associated with table object
       this will also allow multiple synapses within single neuron, but unlikely if large neuron population

#to eliminate MSNsyn, need to change specification of the synapse in plastic_synapse
#PYTHONPATH=. py.test -v
#PYTHONPATH=. py.test -v -x to stop after 1st failure (and print the problem)
#PYTHONPATH=. py.test -v -x -k"test_net_injection[]" to execute a single test
#PYTHONPATH=. py.test -v -x -k"test_net_injection" to execute all network test

#add to tutorial
#name=moose.element(path)
#name.sourceFields
#name.destFields
#name.msgOut
#name.msgOut.getFieldNames()
#name.msgOut[0].e1 shows the source object, i.e. name
#name.msgOut[0].e2 shows the destination object (what it is connected to)

#git grep -e test_plasticity -l|xargs sed -i s/test_plasticity/plasticity_test/g

-e because git is stupid and will not recognize -l otherwise
-l list filenames only
|xargs: pipe into sed
-i inplace (don't print to standard output, instead overwrite original file)
s/string1/string2/ replace string1 with string2
g more than one string per line
